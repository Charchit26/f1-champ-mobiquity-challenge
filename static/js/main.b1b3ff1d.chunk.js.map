{"version":3,"sources":["constants/index.js","constants/urlConstants.js","api/ergastAPI.js","components/WorldChampionsList/index.js","pages/HomePage/index.js","components/YearlyWinnersList/index.js","pages/SelectedYearPage/index.js","App.js","index.js"],"names":["SESSION_STORAGE_BASE_KEY","SESSION_STORAGE_ALL_WINNERS_KEY","SESSION_STORAGE_SELECTED_YEAR","BASE_URL","ALL_WINNERS_URL","fetchAllWorldChampionsFromYear","a","year","cacheContent","sessionStorage","getItem","JSON","parse","offset","axios","get","response","setItem","stringify","data","undefined","fetchAllWinnersOfSelectedYear","WorldChampionsList","StandingsTable","className","List","animated","relaxed","verticalAlign","StandingsLists","map","season","Driver","DriverStandings","Item","to","state","selectedDriver","Card","fluid","header","givenName","familyName","meta","HomePage","useState","winnersData","setWinnersData","useEffect","MRData","fetchData","YearlyWinnersList","RaceTable","Races","round","raceName","Results","classNames","SelectedYearPage","useParams","useLocation","App","Header","as","image","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1b3ff1d.chunk.js","sourcesContent":["export const SESSION_STORAGE_BASE_KEY = \"mobiquity\"\nexport const SESSION_STORAGE_ALL_WINNERS_KEY= `${SESSION_STORAGE_BASE_KEY}-allWinners`\n\nexport const SESSION_STORAGE_SELECTED_YEAR= `${SESSION_STORAGE_BASE_KEY}-selectedYear`","export const BASE_URL = 'http://ergast.com/api/f1'\n\nexport const ALL_WINNERS_URL = `${BASE_URL}/driverStandings/1.json`\n","import axios from \"axios\"\nimport { SESSION_STORAGE_ALL_WINNERS_KEY, SESSION_STORAGE_SELECTED_YEAR } from \"../constants\";\nimport { ALL_WINNERS_URL, BASE_URL } from \"../constants/urlConstants\";\n\nexport const fetchAllWorldChampionsFromYear = async(year = 2005) => {\n    //check cache\n    const cacheContent = sessionStorage.getItem(`${SESSION_STORAGE_ALL_WINNERS_KEY}-${year}`)\n    \n    //cache hit\n    if(cacheContent)\n        return JSON.parse(cacheContent)\n\n    //cache miss\n    const offset=year-1950;\n\n    try {\n        const response = await axios.get(`${ALL_WINNERS_URL}?offset=${offset}`)\n        sessionStorage.setItem(`${SESSION_STORAGE_ALL_WINNERS_KEY}-${year}`, JSON.stringify(response.data))\n        return response.data\n    } catch(err) {\n        // Log error here\n        // console.error('Error calling the API', err)\n        return undefined;\n    }\n}\n\nexport const fetchAllWinnersOfSelectedYear = async(year) => {\n    //check cache\n    const cacheContent = sessionStorage.getItem(`${SESSION_STORAGE_SELECTED_YEAR}-${year}`)\n    \n    //cache hit\n    if(cacheContent)\n        return JSON.parse(cacheContent)\n\n    //cache miss\n    try {\n        const response = await axios.get(`${BASE_URL}/${year}/results/1.json`)\n        sessionStorage.setItem(`${SESSION_STORAGE_SELECTED_YEAR}-${year}`, JSON.stringify(response.data))\n        return response.data\n    } catch(err) {\n        // Log error here\n        // console.error('Error calling the API', err)\n        return undefined;\n    }\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { List, Card } from 'semantic-ui-react'\n\nexport default function WorldChampionsList({ data }) {\n  if (!data) {\n    return (<>No Data</>)\n  }\n  const { StandingsTable } = data;\n\n  return (\n    <div className=\"centeredList\">\n      <List data-testid=\"listItem\" animated relaxed verticalAlign='middle'>\n        {StandingsTable?.StandingsLists.map(({ season, DriverStandings }) => {\n          const { Driver } = DriverStandings[0];\n          return (\n            <List.Item>\n              <Link key={season} to={`/year/${season}`} state={{ selectedDriver: Driver }} >\n                <Card\n                  fluid\n                  header={`${Driver.givenName} ${Driver.familyName}`}\n                  meta={season}\n                />\n              </Link>\n            </List.Item>\n          )\n        })\n        }\n      </List>\n    </div>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { render } from \"react-dom\";\nimport { Header } from \"semantic-ui-react\";\nimport { fetchAllWorldChampionsFromYear } from \"../../api/ergastAPI\"\nimport WorldChampionsList from \"../../components/WorldChampionsList\";\n\nexport default function HomePage() {\n    const [winnersData, setWinnersData] = useState();\n    useEffect(() => {\n        async function fetchData() {\n            const data = await fetchAllWorldChampionsFromYear(2005);\n            if (data)\n                setWinnersData({ ...data.MRData })\n        }\n        fetchData();\n    }, [])\n\n    return(\n        <>\n            <h1>World Champions</h1>\n            {winnersData ? <WorldChampionsList data={winnersData} /> : <div>loading...</div>}\n        </>\n    )\n}","import classNames from 'classnames';\nimport React from 'react'\nimport { List, Card } from 'semantic-ui-react'\n\nexport default function YearlyWinnersList({data, selectedDriver}) {\n  if (!data) {\n    return (<>No Data</>)\n  }\n  const { RaceTable } = data;\n\n  return (\n    <div className=\"centeredList\">\n      <List data-testid=\"yearlyListItem\" animated verticalAlign='middle'>\n        {RaceTable?.Races.map(({ round, raceName, Results }) => {\n          const { Driver } = Results[0];\n          return (\n            <Card\n              key={round}\n              fluid\n              className={classNames({\"highlightedItem\" : (selectedDriver && Driver.givenName === selectedDriver.givenName)})}\n              header={`${Driver.givenName} ${Driver.familyName}`}\n              meta={`Race Number ${round} - ${raceName}`}\n            />\n          )\n        })\n        }\n      </List>\n    </div>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { Header } from \"semantic-ui-react\";\nimport { fetchAllWinnersOfSelectedYear } from \"../../api/ergastAPI\";\nimport YearlyWinnersList from \"../../components/YearlyWinnersList\";\n\nexport default function SelectedYearPage() {\n    let { year } = useParams();\n    let { state } = useLocation();\n    let selectedDriver = state? state.selectedDriver : undefined\n\n    const [winnersData, setWinnersData] = useState();\n    useEffect(() => {\n        async function fetchData() {\n            const data = await fetchAllWinnersOfSelectedYear(year);\n            if (data)\n                setWinnersData({ ...data.MRData })\n        }\n        fetchData()\n    }, [year])\n\n    return (\n        <>\n            <h1>Winners Season {year}</h1>\n            {winnersData ? <YearlyWinnersList data={winnersData} selectedDriver={selectedDriver} />\n                : <div>loading...</div>}\n        </>\n    )\n}","import './App.css';\nimport { Route, Routes } from 'react-router';\nimport HomePage from './pages/HomePage';\nimport { BrowserRouter } from 'react-router-dom';\nimport SelectedYearPage from './pages/SelectedYearPage';\nimport { Header } from 'semantic-ui-react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header as='h2' image='/images/f1_logo.svg' data-testid=\"navHeader\" className=\"navHeader\" />\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"year/:year\" element={<SelectedYearPage />} />\n          <Route path=\"*\" element={<HomePage />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}